[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ingest-pdf"
version = "0.1.0"
description = "A Python application for ingesting and processing PDF files"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "llama-parse>=0.4.0",
    "click>=8.0.0",
    "pathlib",
    "typing-extensions>=4.0.0",
    "watchdog>=6.0.0",
    "httpx>=0.28.1",
    "typer>=0.17.3",
    "pydantic>=2.11.7",
    "tomli-w>=1.2.0",
    "tenacity>=9.1.2",
    "python-dotenv>=1.1.1",
    "llama-index-core>=0.13.3",
    "llama-index-readers-file>=0.5.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "types-requests",
    "reportlab>=4.0.0",  # For test fixtures
]

[project.scripts]
pdf-ingestor = "ingest_pdf.main:main"
ingest-pdf = "ingest_pdf.main:main"  # Keep legacy alias

[project.urls]
Homepage = "https://github.com/yourusername/ingest-pdf"
Repository = "https://github.com/yourusername/ingest-pdf"
Issues = "https://github.com/yourusername/ingest-pdf/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--cov=src/ingest_pdf",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"]  # allow asserts in tests

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.hatch.version]
path = "src/ingest_pdf/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/ingest_pdf"]


[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "reportlab>=4.4.3",
    "ruff>=0.12.11",
]
